{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,CAAC,SAASC,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMS,EAAOC,SAASC,cAAc,SAGpC,IAAIC,EADJH,EAAKI,iBAAiB,UAEtB,SAAsBC,GAGpB,IAFAA,EAAMC,iBAEDhB,SAAS,EAAGA,UAAUU,EAAKO,OAAOC,MAAMlB,WAAW,CACtDa,GAASH,EAAKD,MAAMS,QAAUR,EAAKS,KAAKD,OAAUlB,SAAW,GAC/D,MAAMoB,EAAW,GAEfrB,EAAcC,SAAUa,GACrBQ,MAAK,EAACrB,SAAEA,EAAQS,MAAEA,MACjBa,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBS,MAAU,IAEzEgB,OAAM,EAACzB,SAAEA,EAAQS,MAAEA,MAClBa,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeS,MAAU,IAGzEW,EAASO,KAAK5B,EAAcC,SAAUa,IAExCX,QAAQ0B,KAAKR,GACZC,MAAKH,GAASW,QAAQC,IAAIZ,KAC1BO,OAAMM,GAASF,QAAQC,IAAIC,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n{function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitBtn);\nlet delay;\nfunction onSubmitBtn (event){\n  event.preventDefault();\n\n  for (position=1; position<=form.amount.value;position++){\n    delay = +form.delay.value + (+form.step.value) * (position - 1);\n  const promises = [];\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    promises.push(createPromise(position, delay));\n  \n  Promise.race(promises)\n  .then(value => console.log(value)) \n  .catch(error => console.log(error))}}};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","form","document","querySelector","delay1","addEventListener","event","preventDefault","amount","value","step","promises","then","$parcel$interopDefault","Notify","success","catch","failure","push","race","console","log","error"],"version":3,"file":"03-promises.00c3d3f8.js.map"}